{"ast":null,"code":"import axios from \"axios\";\nimport { Form, Field, ErrorMessage, defineRule, configure } from \"vee-validate\";\nimport { required, email } from \"@vee-validate/rules\";\n\n// Reglas personalizadas\ndefineRule(\"onlyLetters\", value => {\n  const onlyLettersRegex = /^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$/;\n  if (!value) return true;\n  return onlyLettersRegex.test(value) || \"El nombre no debe contener números\";\n});\ndefineRule(\"textWithNumbers\", value => {\n  const onlyNumbersRegex = /^[0-9]+$/;\n  if (!value) return true;\n  return !onlyNumbersRegex.test(value) || \"El mensaje no puede ser solo números\";\n});\n\n// Reglas base\ndefineRule(\"required\", required);\ndefineRule(\"email\", email);\n\n// Configuración de mensajes en español\nconfigure({\n  generateMessage: context => {\n    const messages = {\n      required: `El campo ${context.field} es obligatorio.`,\n      email: \"Por favor, introduce un correo electrónico válido.\",\n      onlyLetters: \"El nombre no debe contener números\",\n      textWithNumbers: \"El mensaje no puede ser solo números\"\n    };\n    return messages[context.rule.name] || `Error en el campo ${context.field}`;\n  }\n});\nexport default {\n  name: \"ContactPage\",\n  components: {\n    Form,\n    Field,\n    ErrorMessage\n  },\n  data() {\n    return {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n      isSubmitting: false // Estado para la animación de \"Enviando...\"\n    };\n  },\n  methods: {\n    async submitForm({\n      resetForm\n    }) {\n      this.isSubmitting = true; // Activar animación\n      try {\n        const response = await axios.post(\"/api/contact\", {\n          name: this.name,\n          email: this.email,\n          message: this.message\n        });\n        console.log(\"Formulario enviado con éxito:\", response.data);\n        alert(\"Mensaje enviado correctamente\");\n\n        // Limpiar los campos y resetear validaciones\n        resetForm();\n      } catch (error) {\n        console.error(\"Error al enviar el formulario:\", error.response ? error.response.data : error.message);\n        alert(\"Error al enviar el formulario. Intente nuevamente.\");\n      } finally {\n        this.isSubmitting = false; // Ocultar animación\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","Form","Field","ErrorMessage","defineRule","configure","required","email","value","onlyLettersRegex","test","onlyNumbersRegex","generateMessage","context","messages","field","onlyLetters","textWithNumbers","rule","name","components","data","message","isSubmitting","methods","submitForm","resetForm","response","post","console","log","alert","error"],"sources":["C:\\Users\\yacta\\Desktop\\S16_TG_JS ULT\\frontend\\src\\views\\ContactPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex justify-content-center align-items-center min-vh-100\">\r\n    <div class=\"contact-page container p-5 shadow rounded-3 bg-light\">\r\n      <h1 class=\"text-center mb-4 text-primary fw-bold\">Contáctanos</h1>\r\n      <p class=\"text-center text-muted mb-5\">\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Optio ipsum tempore, recusandae officia sapiente, tempora eos enim nihil voluptatibus repudiandae, ipsam assumenda eius blanditiis! Nulla, consectetur consequuntur. Obcaecati, dignissimos cupiditate.\r\n      </p>\r\n      \r\n      <Form @submit=\"submitForm\" v-slot=\"{ meta }\" class=\"animate__animated animate__fadeIn\">\r\n        <div class=\"mb-4\">\r\n          <label for=\"name\" class=\"form-label text-primary fw-semibold\">Nombre</label>\r\n          <Field type=\"text\" class=\"form-control border-primary\" id=\"name\" name=\"name\" rules=\"required|onlyLetters\" v-model=\"name\" />\r\n          <ErrorMessage name=\"name\" class=\"text-danger small mt-1 d-block\" />\r\n        </div>\r\n        \r\n        <div class=\"mb-4\">\r\n          <label for=\"email\" class=\"form-label text-primary fw-semibold\">Correo Electrónico</label>\r\n          <Field type=\"email\" class=\"form-control border-primary\" id=\"email\" name=\"email\" rules=\"required|email\" v-model=\"email\" />\r\n          <ErrorMessage name=\"email\" class=\"text-danger small mt-1 d-block\" />\r\n        </div>\r\n        \r\n        <div class=\"mb-4\">\r\n          <label for=\"message\" class=\"form-label text-primary fw-semibold\">Mensaje</label>\r\n          <Field as=\"textarea\" class=\"form-control border-primary fixed-textarea\" id=\"message\" name=\"message\" rules=\"required|textWithNumbers\" v-model=\"message\" />\r\n          <ErrorMessage name=\"message\" class=\"text-danger small mt-1 d-block\" />\r\n        </div>\r\n        \r\n        <div class=\"text-center\">\r\n          <button type=\"submit\" class=\"btn btn-primary px-5 py-2\" :disabled=\"!meta.valid || isSubmitting\">\r\n            <span v-if=\"isSubmitting\">\r\n              <span class=\"spinner-border spinner-border-sm me-2\"></span> Enviando...\r\n            </span>\r\n            <span v-else>Enviar</span>\r\n          </button>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { Form, Field, ErrorMessage, defineRule, configure } from \"vee-validate\";\r\nimport { required, email } from \"@vee-validate/rules\";\r\n\r\n// Reglas personalizadas\r\ndefineRule(\"onlyLetters\", (value) => {\r\n  const onlyLettersRegex = /^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$/;\r\n  if (!value) return true;\r\n  return onlyLettersRegex.test(value) || \"El nombre no debe contener números\";\r\n});\r\n\r\ndefineRule(\"textWithNumbers\", (value) => {\r\n  const onlyNumbersRegex = /^[0-9]+$/;\r\n  if (!value) return true;\r\n  return !onlyNumbersRegex.test(value) || \"El mensaje no puede ser solo números\";\r\n});\r\n\r\n// Reglas base\r\ndefineRule(\"required\", required);\r\ndefineRule(\"email\", email);\r\n\r\n// Configuración de mensajes en español\r\nconfigure({\r\n  generateMessage: (context) => {\r\n    const messages = {\r\n      required: `El campo ${context.field} es obligatorio.`,\r\n      email: \"Por favor, introduce un correo electrónico válido.\",\r\n      onlyLetters: \"El nombre no debe contener números\",\r\n      textWithNumbers: \"El mensaje no puede ser solo números\",\r\n    };\r\n    return messages[context.rule.name] || `Error en el campo ${context.field}`;\r\n  },\r\n});\r\n\r\nexport default {\r\n  name: \"ContactPage\",\r\n  components: {\r\n    Form,\r\n    Field,\r\n    ErrorMessage,\r\n  },\r\n  data() {\r\n    return {\r\n      name: \"\",\r\n      email: \"\",\r\n      message: \"\",\r\n      isSubmitting: false, // Estado para la animación de \"Enviando...\"\r\n    };\r\n  },\r\n  methods: {\r\n    async submitForm({ resetForm }) {\r\n      this.isSubmitting = true; // Activar animación\r\n      try {\r\n        const response = await axios.post(\"/api/contact\", {\r\n          name: this.name,\r\n          email: this.email,\r\n          message: this.message,\r\n        });\r\n\r\n        console.log(\"Formulario enviado con éxito:\", response.data);\r\n        alert(\"Mensaje enviado correctamente\");\r\n\r\n        // Limpiar los campos y resetear validaciones\r\n        resetForm();\r\n      } catch (error) {\r\n        console.error(\r\n          \"Error al enviar el formulario:\",\r\n          error.response ? error.response.data : error.message\r\n        );\r\n        alert(\"Error al enviar el formulario. Intente nuevamente.\");\r\n      } finally {\r\n        this.isSubmitting = false; // Ocultar animación\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.contact-page {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 60px;\r\n}\r\n\r\n.fixed-textarea {\r\n  height: 180px;\r\n  resize: none;\r\n}\r\n\r\n.form-control {\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.form-label {\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.error-message {\r\n  font-size: 0.9rem;\r\n}\r\n</style>\r\n"],"mappings":"AAyCA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,IAAI,EAAEC,KAAK,EAAEC,YAAY,EAAEC,UAAU,EAAEC,SAAQ,QAAS,cAAc;AAC/E,SAASC,QAAQ,EAAEC,KAAI,QAAS,qBAAqB;;AAErD;AACAH,UAAU,CAAC,aAAa,EAAGI,KAAK,IAAK;EACnC,MAAMC,gBAAe,GAAI,2BAA2B;EACpD,IAAI,CAACD,KAAK,EAAE,OAAO,IAAI;EACvB,OAAOC,gBAAgB,CAACC,IAAI,CAACF,KAAK,KAAK,oCAAoC;AAC7E,CAAC,CAAC;AAEFJ,UAAU,CAAC,iBAAiB,EAAGI,KAAK,IAAK;EACvC,MAAMG,gBAAe,GAAI,UAAU;EACnC,IAAI,CAACH,KAAK,EAAE,OAAO,IAAI;EACvB,OAAO,CAACG,gBAAgB,CAACD,IAAI,CAACF,KAAK,KAAK,sCAAsC;AAChF,CAAC,CAAC;;AAEF;AACAJ,UAAU,CAAC,UAAU,EAAEE,QAAQ,CAAC;AAChCF,UAAU,CAAC,OAAO,EAAEG,KAAK,CAAC;;AAE1B;AACAF,SAAS,CAAC;EACRO,eAAe,EAAGC,OAAO,IAAK;IAC5B,MAAMC,QAAO,GAAI;MACfR,QAAQ,EAAE,YAAYO,OAAO,CAACE,KAAK,kBAAkB;MACrDR,KAAK,EAAE,oDAAoD;MAC3DS,WAAW,EAAE,oCAAoC;MACjDC,eAAe,EAAE;IACnB,CAAC;IACD,OAAOH,QAAQ,CAACD,OAAO,CAACK,IAAI,CAACC,IAAI,KAAK,qBAAqBN,OAAO,CAACE,KAAK,EAAE;EAC5E;AACF,CAAC,CAAC;AAEF,eAAe;EACbI,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IACVnB,IAAI;IACJC,KAAK;IACLC;EACF,CAAC;EACDkB,IAAIA,CAAA,EAAG;IACL,OAAO;MACLF,IAAI,EAAE,EAAE;MACRZ,KAAK,EAAE,EAAE;MACTe,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,KAAK,CAAE;IACvB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAC;MAAEC;IAAU,CAAC,EAAE;MAC9B,IAAI,CAACH,YAAW,GAAI,IAAI,EAAE;MAC1B,IAAI;QACF,MAAMI,QAAO,GAAI,MAAM3B,KAAK,CAAC4B,IAAI,CAAC,cAAc,EAAE;UAChDT,IAAI,EAAE,IAAI,CAACA,IAAI;UACfZ,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBe,OAAO,EAAE,IAAI,CAACA;QAChB,CAAC,CAAC;QAEFO,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEH,QAAQ,CAACN,IAAI,CAAC;QAC3DU,KAAK,CAAC,+BAA+B,CAAC;;QAEtC;QACAL,SAAS,CAAC,CAAC;MACb,EAAE,OAAOM,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CACX,gCAAgC,EAChCA,KAAK,CAACL,QAAO,GAAIK,KAAK,CAACL,QAAQ,CAACN,IAAG,GAAIW,KAAK,CAACV,OAC/C,CAAC;QACDS,KAAK,CAAC,oDAAoD,CAAC;MAC7D,UAAU;QACR,IAAI,CAACR,YAAW,GAAI,KAAK,EAAE;MAC7B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}