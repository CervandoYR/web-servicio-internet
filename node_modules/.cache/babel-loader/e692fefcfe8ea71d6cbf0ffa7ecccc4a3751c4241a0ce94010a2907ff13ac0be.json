{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nexport default {\n  name: \"AppNavbar\",\n  data() {\n    return {\n      showNavbar: false,\n      activeSection: \"home\" // Sección activa por defecto\n    };\n  },\n  methods: {\n    toggleNavbar() {\n      this.showNavbar = !this.showNavbar;\n    },\n    closeNavbar() {\n      this.showNavbar = false;\n    },\n    scrollToHome() {\n      this.closeNavbar();\n      this.scrollToSection(\"home\");\n    },\n    scrollToSection(sectionId) {\n      this.closeNavbar();\n      const section = document.getElementById(sectionId);\n      if (section) {\n        section.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      }\n    },\n    observeSections() {\n      const options = {\n        root: null,\n        rootMargin: \"0px\",\n        threshold: 0.5 // Detectar cuando al menos el 50% de la sección esté visible\n      };\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            this.activeSection = entry.target.id; // Actualiza la sección activa\n          }\n        });\n      }, options);\n      const sections = document.querySelectorAll(\"section\"); // Asegúrate de que tus secciones tengan etiquetas <section>\n      sections.forEach(section => observer.observe(section));\n    }\n  },\n  mounted() {\n    this.observeSections();\n  }\n};","map":{"version":3,"names":["name","data","showNavbar","activeSection","methods","toggleNavbar","closeNavbar","scrollToHome","scrollToSection","sectionId","section","document","getElementById","scrollIntoView","behavior","observeSections","options","root","rootMargin","threshold","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","id","sections","querySelectorAll","observe","mounted"],"sources":["C:\\Users\\yacta\\Desktop\\S16_TG_JS ULT\\frontend\\src\\components\\AppNavbar.vue"],"sourcesContent":["<template>\r\n  <main class=\"content\">\r\n    <div>\r\n      <nav class=\"navbar navbar-expand-lg navbar-dark fixed-top shadow-sm\">\r\n        <div class=\"container\">\r\n          <!-- Logo -->\r\n          <router-link to=\"/\" class=\"navbar-brand fw-bold\" @click.prevent=\"scrollToHome\">\r\n            <i class=\"fas fa-network-wired me-2\"></i>NetSystems\r\n          </router-link>\r\n\r\n          <!-- Botón de colapso -->\r\n          <button class=\"navbar-toggler\" type=\"button\" @click=\"toggleNavbar\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <!-- Enlaces del navbar -->\r\n          <div class=\"collapse navbar-collapse\" :class=\"{ 'show': showNavbar }\">\r\n            <ul class=\"navbar-nav ms-auto\">\r\n              <router-link to=\"/\" class=\"nav-link\" @click=\"scrollToHome\" :class=\"{ active: activeSection === 'home' }\">\r\n                <i class=\"fas fa-house me-1\"></i>Inicio\r\n              </router-link>\r\n\r\n              <router-link to=\"/\" class=\"nav-link\" @click=\"scrollToSection('plans')\" :class=\"{ active: activeSection === 'plans' }\">\r\n                <i class=\"fas fa-list-alt me-1\"></i>Planes\r\n              </router-link>\r\n\r\n              <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#info\" @click=\"closeNavbar()\" :class=\"{ active: activeSection === 'info' }\">\r\n                  <i class=\"fas fa-star me-1\"></i>Beneficios\r\n                </a>\r\n              </li>\r\n\r\n              <router-link to=\"/\" class=\"nav-link\" @click=\"scrollToSection('contacto')\" :class=\"{ active: activeSection === 'contacto' }\">\r\n                <i class=\"fas fa-envelope me-1\"></i>Contacto\r\n              </router-link>\r\n\r\n              <li class=\"nav-item\">\r\n                <router-link to=\"/about\" class=\"nav-link\" @click=\"closeNavbar()\" :class=\"{ active: activeSection === 'about' }\">\r\n                  <i class=\"fas fa-info-circle me-1\"></i>Info\r\n                </router-link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"AppNavbar\",\r\n  data() {\r\n    return {\r\n      showNavbar: false,\r\n      activeSection: \"home\", // Sección activa por defecto\r\n    };\r\n  },\r\n  methods: {\r\n    toggleNavbar() {\r\n      this.showNavbar = !this.showNavbar;\r\n    },\r\n    closeNavbar() {\r\n      this.showNavbar = false;\r\n    },\r\n    scrollToHome() {\r\n      this.closeNavbar();\r\n      this.scrollToSection(\"home\");\r\n    },\r\n    scrollToSection(sectionId) {\r\n      this.closeNavbar();\r\n      const section = document.getElementById(sectionId);\r\n      if (section) {\r\n        section.scrollIntoView({ behavior: \"smooth\" });\r\n      }\r\n    },\r\n    observeSections() {\r\n      const options = {\r\n        root: null,\r\n        rootMargin: \"0px\",\r\n        threshold: 0.5, // Detectar cuando al menos el 50% de la sección esté visible\r\n      };\r\n\r\n      const observer = new IntersectionObserver((entries) => {\r\n        entries.forEach((entry) => {\r\n          if (entry.isIntersecting) {\r\n            this.activeSection = entry.target.id; // Actualiza la sección activa\r\n          }\r\n        });\r\n      }, options);\r\n\r\n      const sections = document.querySelectorAll(\"section\"); // Asegúrate de que tus secciones tengan etiquetas <section>\r\n      sections.forEach((section) => observer.observe(section));\r\n    },\r\n  },\r\n  mounted() {\r\n    this.observeSections();\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.navbar {\r\n  background-color: #F1634C;\r\n  transition: all 0.3s ease-in-out;\r\n}\r\n\r\n.navbar-toggler {\r\n  border: none;\r\n}\r\n\r\n.nav-link.active {\r\n  color: #ffd700 !important;\r\n  text-decoration: underline;\r\n}\r\n\r\n\r\n.content {\r\n  margin-top: 70px;\r\n  transition: margin-top 0.3s ease-in-out;\r\n  display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n  \r\n}\r\n\r\n\r\n.navbar-collapse.show+.content {\r\n  margin-top: auto;\r\n}\r\n\r\n\r\n.navbar-toggler-icon {\r\n  filter: brightness(0.8);\r\n}\r\n\r\n.nav-link {\r\n  color: #fff;\r\n  font-weight: 600;\r\n  transition: color 0.3s ease-in-out;\r\n}\r\n\r\n.nav-link:hover {\r\n  color: #ffd700;\r\n}\r\n\r\n.nav-link.active {\r\n  color: #ffd700;\r\n  text-decoration: underline;\r\n}\r\n\r\n.shadow-sm {\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n\r\n</style>\r\n"],"mappings":";;AAkDA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,KAAK;MACjBC,aAAa,EAAE,MAAM,CAAE;IACzB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACH,UAAS,GAAI,CAAC,IAAI,CAACA,UAAU;IACpC,CAAC;IACDI,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACJ,UAAS,GAAI,KAAK;IACzB,CAAC;IACDK,YAAYA,CAAA,EAAG;MACb,IAAI,CAACD,WAAW,CAAC,CAAC;MAClB,IAAI,CAACE,eAAe,CAAC,MAAM,CAAC;IAC9B,CAAC;IACDA,eAAeA,CAACC,SAAS,EAAE;MACzB,IAAI,CAACH,WAAW,CAAC,CAAC;MAClB,MAAMI,OAAM,GAAIC,QAAQ,CAACC,cAAc,CAACH,SAAS,CAAC;MAClD,IAAIC,OAAO,EAAE;QACXA,OAAO,CAACG,cAAc,CAAC;UAAEC,QAAQ,EAAE;QAAS,CAAC,CAAC;MAChD;IACF,CAAC;IACDC,eAAeA,CAAA,EAAG;MAChB,MAAMC,OAAM,GAAI;QACdC,IAAI,EAAE,IAAI;QACVC,UAAU,EAAE,KAAK;QACjBC,SAAS,EAAE,GAAG,CAAE;MAClB,CAAC;MAED,MAAMC,QAAO,GAAI,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;QACrDA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;UACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;YACxB,IAAI,CAACtB,aAAY,GAAIqB,KAAK,CAACE,MAAM,CAACC,EAAE,EAAE;UACxC;QACF,CAAC,CAAC;MACJ,CAAC,EAAEX,OAAO,CAAC;MAEX,MAAMY,QAAO,GAAIjB,QAAQ,CAACkB,gBAAgB,CAAC,SAAS,CAAC,EAAE;MACvDD,QAAQ,CAACL,OAAO,CAAEb,OAAO,IAAKU,QAAQ,CAACU,OAAO,CAACpB,OAAO,CAAC,CAAC;IAC1D;EACF,CAAC;EACDqB,OAAOA,CAAA,EAAG;IACR,IAAI,CAAChB,eAAe,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}